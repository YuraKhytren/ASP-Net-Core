// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task9ASPNetCore.Infrastructure.Data;

#nullable disable

namespace Task9ASPNetCore.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Task9ASPNetCore.Domain.Core.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Description = " Learn C# Lenguage",
                            Name = "C#"
                        },
                        new
                        {
                            Id = 4,
                            Description = " Learn Java Lenguage",
                            Name = "Java"
                        },
                        new
                        {
                            Id = 5,
                            Description = " Learn Python Lenguage",
                            Name = "Python"
                        },
                        new
                        {
                            Id = 6,
                            Description = " Learn Ruby Lenguage",
                            Name = "Ruby"
                        },
                        new
                        {
                            Id = 7,
                            Description = " Learn SQL Lenguage",
                            Name = "SQL"
                        });
                });

            modelBuilder.Entity("Task9ASPNetCore.Domain.Core.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            CourseId = 3,
                            Name = "SR-01"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "SR-02"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 4,
                            Name = "SR-03"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Name = "SR-04"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Name = "SR-05"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 5,
                            Name = "SR-06"
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 6,
                            Name = "SR-07"
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 6,
                            Name = "SR-08"
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 7,
                            Name = "SR-09"
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 7,
                            Name = "SR-10"
                        });
                });

            modelBuilder.Entity("Task9ASPNetCore.Domain.Core.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Oleh",
                            GroupId = 3,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Oleh",
                            GroupId = 3,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Oleh",
                            GroupId = 5,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Oleh",
                            GroupId = 5,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Oleh",
                            GroupId = 6,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Oleh",
                            GroupId = 6,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Oleh",
                            GroupId = 7,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Oleh",
                            GroupId = 7,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Oleh",
                            GroupId = 9,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Oleh",
                            GroupId = 9,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Oleh",
                            GroupId = 11,
                            LastName = " rynt",
                            Patronymic = "Olehovich"
                        });
                });

            modelBuilder.Entity("Task9ASPNetCore.Domain.Core.Group", b =>
                {
                    b.HasOne("Task9ASPNetCore.Domain.Core.Course", "Course")
                        .WithMany("Groups")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Task9ASPNetCore.Domain.Core.Student", b =>
                {
                    b.HasOne("Task9ASPNetCore.Domain.Core.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Task9ASPNetCore.Domain.Core.Course", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Task9ASPNetCore.Domain.Core.Group", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
